Annotated Bibliography

“PostgreSQL CRASH COURSE - Learn PostgreSQL in 2022” YouTube, uploaded by Troy Amelotte, 14 Jan. 2021, https://www.youtube.com/watch?v=zw4s3Ey8ayo. 
As of recently, I was tasked with making a database in Postgresql for all the data involving classes such as professor, available classes, pre-requisites, course title, etc. Thus, over the last two weeks I have been researching Postgresql and tutorials for how to create and store data. The video covers how to create tables in Postgres using SQL syntax along with naming conventions, constraints, and data types. It also introduces the basics of SQL syntax for inserting and retrieving data from tables, as well as using update and delete statements. Troy also explains the different types of table relationships, with examples of one-to-one, one-to-many, and many-to-many relationships. I have been using this video in order to learn how to organize and create tables that would help store the large amounts of data for the existing classes. Watching this tutorial has helped me understand how tables link together and how to combine them in such a way to create easy access for data that we might need. I have been tinkering around with tables trying to find the most efficient way of storage but I have not completed enough for me to solve/push anything into the official YACS repository yet. I hope to have the database completed the week after spring break and to move on to other API issues.

“Learn PostgreSQL Tutorial - Full Course for Beginners” YouTube, uploaded by freeCodeCamp.org, 4 April 2019, https://www.youtube.com/watch?v=qw--VYLpxG4.
	This video is a tutorial that covers a variety of topics on PostgreSQL including operators for arithmetic, using dates with PostgreSQL, adding a primary key to a table, using indexes and constraints to improve table performance, changing IDs, generating keys, and creating and inserting data into tables, and joining tables. This video was extremely helpful for me as a beginner because it dove deep into specific topics and provided practice to help me master the concepts. For example, when making tables, each table needs primary and foreign keys for me to join them and that was something I had no idea I needed to do which was why I had a small blocker this week - however, after learning more about keys, I have resolved the blocker. There was also information such as grouping and sorting data by specific categories as well as accessing data in order to use it and error check. Both of these made my life significantly easier as I could group classes that shared the same “course name” under each other and made getting data from the tables much more efficient compared to listing them all out among many other tables.


O, Tiangolo. “Tutorial - User Guide - Intro¶.” FastAPI, FastAPI, 2018, https://fastapi.tiangolo.com/tutorial/. 
	This website was probably the best I found in terms of actually learning how to use FastAPI because there are many extensive tutorials that cover the nitty-gritty details of things one may encounter. Such topics include path and query parameters, request parameters, error handling, fields and nested models, and even relational databases. This by far took up most of my time as I spent roughly two and a half weeks playing around and learning the inside-outs of FastAPI and how to effectively use it. So far, I have not been able to use anything yet as I am still working on creating a database for the data, but once that is finished, I should be able to take the information I’ve learned from the course and the database I created to work with the back-end team to make the “get professor information” working. While I’ve made significant progress in terms of knowledge, there has not been a case where I am able to push/commit anything to GitHub yet. I hope to be able to start committing with FastAPI sometime within two weeks after returning from Spring Break.


“Learn Python - Full Course for Beginners [Tutorial]“ YouTube, uploaded by freeCodeCamp.org, 11 July 2018, https://www.youtube.com/watch?v=rfscVS0vtbw.
	Coming into YACS, I had absolutely no experience with Python but I have worked with other languages such as C++, JS, and Java. While this tutorial did not necessarily teach me any new concepts (ie. for/while loops, if-else statements, etc.), it helped me understand the syntax of Python and provided tutorials for me so I could get the hang of it. This process has been something that has been ongoing as I needed to learn it in order to use FastAPI (since FastAPI is mostly done in Python). Using this tutorial alongside LeetCode, I have been able to understand Python and can now start applying it to my project, YACS. While I took a small break to start working on Postgresql, I have high hopes that I will be able to use Python with FastAPI once I finish my database work.





