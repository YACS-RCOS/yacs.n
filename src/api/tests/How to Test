BEFORE STARTING TO CONTRIBUTE:
1. Create a branch for your contributions off of the FastAPI branch
    * git checkout FastAPI
    * git pull origin FastAPI
    * git branch FastAPI/<name>
    * git checkout FastAPI/<name>
2. Now that you have your own branch, start contributing
3. Commit frequently with git commit -m "<commit message>"
4. When you are ready to push your contributions, run git push origin <name of your branch>
    * Name of your branch is the full FastAPI/<name> you set above in step 1

How to test:
1. All tests will be initially written to src/api/tests directory
2. Name your test file as test_<descriptive test name>.py
3. import all fixtures from fixtures.py
4. Fixture dependencies are passed into tests as parameters, use client and upload (upload only if your test depends on test data)
5. Once test cases are written, run scripts/dev-start.sh
6. Navigate to docker desktop and open a client shell for the api container
7. Run pytest -s

Notes:
* Working on a better way to run the upload test fixture.
    Right now it runs for every test file so running all tests is slow.
    You can select your tests to run individually by running pytest -s <your test file>

* Once we have switched over to fastAPI, we will convert tests to use the fastAPI test client.
    This will make test cases more controllable and efficient as well as removing the need to run the dev api container.
    However, we currently want tests that run for both flask and fastAPI so we will run tests with requests.

* Due to not having access to the test clients, we are testing the dev containers directly.
    This means that uploaded data persists between tests. If your test needs a fresh database, you can reset by running:
        scripts/dev-stop.sh
        scripts/dev-build.sh
        scripts/dev-start.sh