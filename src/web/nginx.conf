user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

events {
  worker_connections  1024;
}

http {

  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  keepalive_timeout  65;

  # Expires map
  map $sent_http_content_type $expires {
      text/css                   30d;
      application/javascript     30d;
      application/json            5m;
  }

  proxy_cache_path /tmp/micro_cache levels=1:2 keys_zone=micro_cache:100m max_size=100m inactive=300s;

  server{
    listen 80;
    listen [::]:80;
    server_name ${HOST};
    return 301 https://${HOST}$request_uri;
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_tokens off;
    # expires $expires;

    # ----- GZIP -----
    gzip on;
    gzip_static on;    
    gzip_proxied  any;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_min_length 600;
    gzip_types image/jpeg image/bmp image/svg+xml text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/x-icon;

    ssl_certificate      /etc/nginx/cert/${HOST}.crt;
    ssl_certificate_key  /etc/nginx/cert/${HOST}.key;

    server_name ${HOST};

    # ----- Security -----
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
    
    # Disabling unwanted http methods
    if ($request_method !~ ^(DELETE|GET|POST)$ ){
      return 405;
    }

    # If user agent is a program/bot, block
    if ($http_user_agent ~* "java|curl|python") {
      return 403;
    }
    
    # Headers
    add_header X-Frame-Options "SAMEORIGIN";                                                      # prevent clickjack attacks
    add_header X-XSS-Protection "1; mode=block";                                                  # prevent XSS attacks
    add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload' always;   # Configuring HSTS
    add_header CC-X-Request-ID $request_id;
    add_header X-Cache_Status $upstream_cache_status;

    # Secure Diffie-Hellman for TLS
    ssl_dhparam /etc/nginx/cert/${HOST}.pem;

    ssl_session_cache shared:TLS:10m;
    ssl_session_timeout 10m;
    
    # Enable session tickets
    ssl_session_tickets on;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=60s;
    resolver_timeout 2s;

    # simple secure admin panel, will change later
    location ~* ^/admin {
      auth_basic           "Admin Panel";
      auth_basic_user_file /conf/htpasswd;
      try_files $uri $uri/ /index.html;
    }

    # serve Flask
    location / {
      root /app;
      proxy_set_header Connection "";
      index index.html;
      try_files $uri $uri/ /index.html;
    }

    # Serve API routes
    location /api {
      # Micro Cache
      proxy_cache micro_cache;
      proxy_cache_valid 200 1s;
      proxy_cache_use_stale updating;
      proxy_cache_background_update on;
      proxy_cache_lock on;

      proxy_cache_revalidate on;
      proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
      
      proxy_pass http://yacs_api:5000;
      client_max_body_size 3M;
    }
  }
}
