user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {

  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  keepalive_timeout  65;


  server{
    listen 80;
    listen [::]:80;
    server_name ${HOST};
    return 301 https://${HOST};
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    ssl_certificate      /etc/nginx/cert/${HOST}.crt;
    ssl_certificate_key  /etc/nginx/cert/${HOST}.key;

    server_name ${HOST};

    # ----- Security -----
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
    # disabling unwanted http methods
    if ($request_method !~ ^(DELETE|GET|POST)$ ){
      return 405;
    }
    # prevent clickjack attacks
    add_header X-Frame-Options "SAMEORIGIN";
    # prevent XSS attacks
    add_header X-XSS-Protection "1; mode=block";
    # Configuring HSTS
    add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
    # Secure Diffie-Hellman for TLS
    ssl_dhparam /etc/nginx/cert/${HOST}.pem;


    # simple secure admin panel, will change later
    location ~* ^/admin {
      auth_basic           "Admin Panel";
      auth_basic_user_file /conf/htpasswd;
      try_files $uri $uri/ /index.html;
    }

    # serve Flask
    location / {
      root /app;
      index index.html;
      try_files $uri $uri/ /index.html;
    }

    # Serve API routes
    location /api {
      proxy_pass http://yacs_api:5000;
      client_max_body_size 3M;
    }

  }
}
