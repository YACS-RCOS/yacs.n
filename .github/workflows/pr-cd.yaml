name: PR Temp Deploys

on:
  pull_request:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Run prettier on src/web
        working-directory: src/web
        run: |
          PRETTIER_VERSION=$(cat package.json | \
            grep \"prettier\" | \
            tr -d '[:space:]' | \
            awk -F: '{print substr($2, 2, length($2) - 3)}')

          if ! npx prettier@$PRETTIER_VERSION "**/*.(js|vue)" --check;
          then
            echo "Running prettier"
            npx prettier@$PRETTIER_VERSION "**/*.(js|vue)" --write

            echo "Setting up git"
            git config --global user.name "I'm a Github Action"
            git config --global user.email "beepboop@github.com"

            echo "Committing changes"
            git commit -am "beep boop Github Action Master Branch CI Prettier hard at work"
            git push
            echo "Changes pushed"

            exit 1
          else
            echo "Files are clean"
          fi

  test_build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build production
        run: |
          docker-compose \
            -f docker-compose.yml \
            -f docker-compose.production.yml \
            build

  temp_deploy:
    needs: test_build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 13.x
        uses: actions/setup-node@v1
        with:
          node-version: 13.x

      - name: echo env (for info)
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo $GITHUB_HEAD_REF)"
          echo "##[set-output name=datetime_ready;]$(TZ='America/New_York' date --date '10 minutes')"
        id: info

      - name: Provision Infrastructure
        run: |
          cd ops/
          npm install
          node provision.js | tee out.txt
          echo "##[set-output name=link;]$(cat out.txt | grep http)"
        env:
          LINODE_TOKEN: ${{ secrets.LINODE_TOKEN }}
          SERVER_ROOT_PASS: ${{ secrets.SERVER_ROOT_PASS }}
          SSH_PUB_KEY: ${{ secrets.SSH_PUB_KEY }}
          ACTIVE_SERVER_COUNT: ${{ secrets.ACTIVE_SERVER_COUNT }} # amount of vms to keep in the active queue
          BRANCH: ${{ steps.info.outputs.branch }}
        id: provision

      - name: Share Link on PR
        uses: thollander/actions-comment-pull-request@master
        with:
          message: |
            Deploy Link: ${{ steps.provision.outputs.link }}/
            Branch and Build Info: ${{ steps.provision.outputs.link }}:3000/info.txt
            Expected Time Ready: ${{ steps.info.outputs.datetime_ready }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
