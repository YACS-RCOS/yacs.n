name: CI

on:
  push:
  workflow_dispatch:

jobs:
  backend-unit-tests:
    name: Run backend unit tests
    runs-on: ubuntu-18.04

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: yacs
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Update Ubuntu
        run: sudo apt-get update

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Load cache for pip
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: |
            ${{ runner.os }}-backend-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-backend-pip-

      - name: Install dependencies
        run: pip install -r src/api/requirements.txt -r tests/requirements.txt

      - name: Run unit tests with coverage
        env:
          DB_PORT: ${{ job.services.postgres.ports[5432] }}
          DB_USER: postgres
          DB_PASS: postgres
          TEST_CSV: rpi_data/summer-2020.csv
          PGHOST: localhost
          PGPORT: ${{ job.services.postgres.ports[5432] }}
          PGUSER: postgres
          PGPASSWORD: postgres
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          bash scripts/test.sh
          bash <(curl -s https://codecov.io/bash)

  cypress:
    name: Run integration tests using cypress
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: yacs
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Setup database
        working-directory: src/data
        env:
          PGHOST: localhost
          PGPORT: ${{ job.services.postgres.ports[5432] }}
          PGUSER: postgres
          PGPASSWORD: postgres
        run: |
          bash build.sh

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Load cache for pip
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: |
            ${{ runner.os }}-backend-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-backend-pip-

      - name: Install dependencies
        run: pip install -r src/api/requirements.txt

      - name: Start API
        working-directory: src/api
        env:
          DB_USER: postgres
          DB_PASS: postgres
          DB_PORT: ${{ job.services.postgres.ports[5432] }}
        run: |
          python app.py &  
          curl \
            --retry 5 \
            --retry-delay 1 \
            --retry-connrefused \
            http://localhost:5000

      - name: Start web
        working-directory: src/web
        run: |
          npm ci
          npm run serve:test &

      - name: Seed test data
        working-directory: rpi_data
        run: |
          function load_semester() {
              curl \
                  --location \
                  --request POST \
                  'http://localhost:8080/api/bulkCourseUpload' \
                  --form "file=@$1" \
                  --form 'isPubliclyVisible=true' \
                  --max-time 60 \
                  -v
          }
          load_semester "summer-2020.csv"
          load_semester "fall-2020.csv"

      - name: Run cypress
        uses: cypress-io/github-action@v2
        with:
          working-directory: tests/integration
          wait-on: "http://localhost:8080"

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: tests/integration/cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: tests/integration/cypress/videos

      - uses: actions/upload-artifact@v1
        with:
          name: nyc-report
          path: tests/integration/coverage/lcov-report

      - name: Upload coverage
        working-directory: tests/integration
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          npm run report-coverage
          bash <(curl -s https://codecov.io/bash)

  test-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build production
        run: |
          docker-compose \
            -f docker-compose.yml \
            -f docker-compose.production.yml \
            build
